# https://pandas.pydata.org/Pandas_Cheat_Sheet.pdf 판다스 시트자료
# https://pandas.pydata.org/docs/user_guide/10min.html 판다스 10분 종 합문서

import pandas as pd

# 1번 데이터
df = pd.DataFrame(
    [[4, 7, 10],              # 리스트를 []로 한번더 감싸서 3개의 리스트로 사용함(행렬 형태)  /  시리즈데이터라고도 불림
    [5, 8, 11],
    [6, 9, 12]],
    index=[1, 2, 3],      # <-- 인덱스 번호를 써주는 이유는 인덱스가 붙은 처음 지점이 0부터 시작하는 것을 방지하기 위해서다.
    columns=['a', 'b', 'c'])

"""
1번 데이터와 2번 데이터의 차이는 1번에서는 컬럼을 따로 지정해준것 2번은 만들때 같이 만든 것! 이 차이뿐이다. 즉! 같은 데이터
"""
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# df[df.Length > 7]   # AttributeError: 'DataFrame' object has no attribute 'Length'  Length라는 특성이없다라고 뜸 즉! Length를 지우고 원하는 컬럼의 이름을 넣자

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# print(df[df.a > 7])   # <-- a의 값중에 7보다 큰 값이 없으므로 표 안에 데이터가 출력안되는 상태

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# print(df[df.a < 7])   # <-- a의 값중에 7보다 작은 값들이에해당하는 rows(행) 데이터를 표로 출력됨
#      a  b   c
# n v
# d 1  4  7  10
#   2  5  8  11
# e 2  6  9  12

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# print(df[df.a < 5])   # <-- a의 값중에 5보다 작은 값들이에해당하는 rows(행) 데이터를 표로 출력됨
#      a  b   c
# n v
# d 1  4  7  10

#- - - -[ df[]를 빼고 사용 ]- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# print(df.a < 7)   # <-- a의 값중에 7보다 작은 값들에 해당하는 rows(행) 데이터를 참과 거짓으로 표시해줌
# n  v
# d  1    True
#    2    True
# e  2    True
# Name: a, dtype: bool

#- - - - --[ df[] 안에서 컬럼에 조건걸기]- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# print(df[df["c"] > 7]) 
#      a  b   c
# n v
# d 1  4  7  10
#   2  5  8  11
# e 2  6  9  12

#- [ 위 아래 같은 것임 / .c == ["c"] ]- - - - - - - - 

# print(df[df.c > 7]) 
#     a  b   c
# n v
# d 1  4  7  10
#   2  5  8  11
# e 2  6  9  12

#- - - - --[ df[] 안에서 컬럼에 조건걸기 정리]- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
"""
df[df.c >(조건) 숫자]  또는 df[df["c"] >(조건) 숫자] 둘은 같은 식이며 조건연산자를 이용해서 해당 컬럼에 대해 조건이 충족하면 해당하는 rows 데이터를 가져와준다.

"""


















